name: Build Windows Application

on:
  workflow_dispatch: # 手动触发构建
  push:
    branches: [ main ]
    paths:
      - 'simple_live_app/**' # 仅当应用代码发生变化时触发
      - '.github/workflows/build-windows.yml' # 工作流本身变化时也触发

jobs:
  build-windows:
    name: Build and Package Windows App
    runs-on: windows-latest # 使用 Windows 环境

    steps:
      # 1. 获取代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 设置 Flutter 环境
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0' # 请确认这是项目要求的精确版本
          channel: 'stable'
          architecture: x64 # 构建 64 位应用

      # 3. 验证环境
      - name: Verify Environment
        run: |
          flutter --version
          flutter doctor

      # 4. 获取项目依赖
      - name: Get Dependencies
        run: flutter pub get
        working-directory: ./simple_live_app

      # 5. 构建 Windows 发布版本
      - name: Build Release Version
        run: flutter build windows --release
        working-directory: ./simple_live_app

      # 6. 创建便携版 ZIP 包
      - name: Create Portable Package
        run: |
          $sourceDir = "simple_live_app/build/windows/runner/Release"
          $zipName = "simple_live_windows_portable.zip"
          
          if (Test-Path $sourceDir) {
            Write-Host "Creating ZIP package from Release directory..."
            Compress-Archive -Path "$sourceDir/*" -DestinationPath $zipName -Force
          } else {
            Write-Error "Release directory not found at: $sourceDir"
            Get-ChildItem -Path "simple_live_app/build" -Recurse -Directory
            exit 1
          }

      # 7. 上传生成的 ZIP 包
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: simple-live-windows-portable
          path: simple_live_windows_portable.zip
